== ElasticSearch Installation ==
    1. Install elasticsearch 1.0.1
    2. Install  elasticsearch-analysis-pinyin
        * simple way is to down load this directory https://github.com/medcl/elasticsearch-rtf/tree/master/plugins/analysis-pinyin and put it under the <elastic search root>/plugins/analysis-pinyin
        * Or, you can download the plugin from /usr/share/elasticsearch/plugins . A "plugins" directory should be under the elasticsearch home directory.

== MongoDB ==
    * 2.6.0 is required.

== Redis ==
    * Redis is required for both development & production
    
== ENV ==
    * apt-get install python-dev python-virtualenv

== Django Server Setup ==
    1. install packages in requirements.txt
        * douban pip source is recommended: pip install -i http://pypi.douban.com/simple -r requirements.txt
    2. copy local_settings.py.EXAMPLE as local_settings.py and modify if it is necessary.
    3. BROKER_URL:
        a. For development, we can just use the BROKER_URL in local_config.py.EXAMPLE. 
        b. For production, use rabbitmq. check local_config.py.EXAMPLE for details.
           * refs: http://docs.celeryproject.org/en/latest/getting-started/brokers/rabbitmq.html)
    4. Also check other variables in local_settings.py.EXAMPLE
        * you may need to set REPLICA_SET
        * PRINT_RAW_LOG should be False for production server
        * API_SERVER_PREFIX should be correct for redirection url to work
        * And for production site, you need to config "CACHES" in local_settings.py. 
            * We use django-redis currently. See local_config.py.EXAMPLE for configuration.
        * Please check CRON_SITE_ID, CELERY_TIMEZONE, CELERYBEAT_SCHEDULE in local_config.py.EXAMPLE
    5. run "python manage.py syncdb"
    7. Also run "celery -A conf worker" in the root dir of the poco project
    8. You also need to set up the celery beat service.
        * celery -A conf beat -s "</path/to/celerybeat-schedule>"
            * refs: http://celery.readthedocs.org/en/latest/userguide/periodic-tasks.html

== Create a new site ==
    (NOTE: if you are moving data from tuijianbao.net to haoyaoshi server, you don't need this step).
    1. python manage.py runscript create_site --script-args=<site_id> <site_name> <api_prefix>
        * NOTE: please note down the api_key and api_token
        * The api_token is for private apis. see document of private apis for usage. (aka. items)
== Crontab ==
   Some routine work should be set up after the deploy is done.
   1. clean the batch server calculate logs
   ```Crontab
   # Read the erase_batch_log.sh first, and set it up correctly
   0 3 * * * crons_folder/erase_batch_log.sh
   ```
